{"version":3,"sources":["components/Navigation/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","categories","setCategories","useEffect","axios","method","url","then","response","data","console","log","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","map","category","name","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA0CeA,MAtCf,WAEI,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAXAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,wCACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,WAE5B,IAEHC,QAAQC,IAAIV,GAGR,qBAAKW,UAAU,MAAf,SACI,qBAAKA,UAAU,gDAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,oBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAASC,iBAAe,WACxDC,iBAAe,sBAAsBC,gBAAc,qBACnDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMP,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BQ,GAAG,qBAA7C,SACI,qBAAKR,UAAU,aAAf,SACKX,EAAWoB,KAAI,SAAAC,GAAQ,OACpB,mBAAGV,UAAU,WAAWC,KAAK,IAA7B,SAAoDS,EAASC,MAAvBD,EAASF,mBClBhEI,MAVf,WAGI,OACI,qBAAKZ,UAAU,MAAf,SACI,cAAC,EAAD,OCGGa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5a0cd08.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction Navbar() {\n\n    const [categories, setCategories] = useState([])\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: \"http://127.0.0.1:8000/api/category/\"\n        }).then(response => {\n            setCategories(response.data)\n        })\n    }, [])\n\n    console.log(categories)\n\n    return (\n        <div className=\"App\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\"\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <div className=\"navbar-nav\">\n                            {categories.map(category => (\n                                <a className=\"nav-link\" href=\"#\" key={category.id}>{category.name}</a>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import './App.css';\nimport Navbar from \"./components/Navigation/Navbar\";\n\n\nfunction App() {\n\n\n    return (\n        <div className=\"App\">\n            <Navbar/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}